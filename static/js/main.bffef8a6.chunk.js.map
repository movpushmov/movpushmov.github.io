{"version":3,"sources":["img/logo.png","img/nsfw-logo.png","pages/home/DumbComponents/TableHead.tsx","components/PercentageIndicator/PercentageIndicator.tsx","pages/home/DumbComponents/PercentageChangeCell.tsx","utils/formatMoney.ts","api/constants.ts","api/methods/searchCurrency.ts","pages/home/CurrenciesTable.tsx","api/mock/getTableData.ts","pages/home/Search.tsx","img/twitter-app.svg","img/telegram.svg","img/discord.svg","pages/home/Home.tsx","pages/dashboard/DumbComponents/CurrenciesLine.tsx","utils/clipboard.ts","pages/dashboard/DumbComponents/CurrencyInfo.tsx","pages/dashboard/DumbComponents/OperationsTable.tsx","api/methods/fetchCurrency.ts","api/methods/getCurrenciesTop.ts","redux/slices/websocket.slice.ts","redux/store.ts","components/Chart/api/datafeed.ts","components/Chart/api/stream.ts","components/Chart/Chart.tsx","redux/hooks.ts","pages/dashboard/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/dashboard/DumbComponents/styles/currency-data.module.css","pages/home/home.module.css","pages/dashboard/styles.module.css","pages/dashboard/DumbComponents/styles/currencies-line.module.css","pages/dashboard/DumbComponents/styles/operations-table.module.css"],"names":["CurrenciesTableHead","cellStyle","TableHead","TableRow","TableCell","width","className","PercentageIndicatorUp","style","verticalAlign","margin","stroke","fill","strokeWidth","viewBox","height","xmlns","d","PercentageIndicatorZero","fillRule","clipRule","PercentageIndicatorDown","PercentageChangeCell","percentage","text","Math","abs","toLocaleString","minimumFractionDigits","maximumFractionDigits","color","formatMoney","money","backendAddress","nameToSwap","sushiswap","pancakeswap","uniswap","quickSwap","searchCurrency","name","a","fetch","request","json","SwapType","CurrenciesTable","props","useState","loading","setIsLoading","currencies","setCurrencies","history","useHistory","styles","useStyles","useEffect","searchRequest","search","length","display","alignItems","justifyContent","CircularProgress","Typography","variant","sx","fontFamily","Box","box","Paper","mb","elevation","TableContainer","Table","size","cell","TableBody","map","row","index","hover","dataRow","onClick","push","address","component","scope","padding","Array","isArray","dex","AvatarGroup","max","url","Avatar","image","src","iconUrl","title","volume","liquidity","price","change","makeStyles","backgroundColor","border","minWidth","overflow","fontWeight","paddingLeft","paddingRight","marginLeft","flexDirection","fontSize","marginRight","cursor","Search","React","query","setQuery","muiStyles","Dialog","open","visible","onClose","maxWidth","fullWidth","classes","container","dialog","DialogContent","TextField","value","onChange","e","currentTarget","searchField","placeholder","InputProps","startAdornment","InputAdornment","position","Icon","cx","cy","r","x1","y1","x2","y2","borderRadius","marginTop","boxSizing","outline","Home","setIsVisible","AppBar","Toolbar","to","logo","alt","nsfwLogo","q","strokeLinecap","strokeLinejoin","target","rel","href","discordLogo","telegramLogo","twitterLogo","borderColor","borderWidth","CurrencyPercentageChangeIcon","CurrenciesLine","c","Tooltip","fullName","changePercentage","defaultIcon","copyToClipboard","navigator","clipboard","writeText","CurrencyInfo","isError","setIsError","snackOpen","setSnackOpen","data","Snackbar","autoHideDuration","Alert","severity","Badge","badgeContent","swap","anchorOrigin","vertical","horizontal","secondToken","cost","mktCap","supply","ethPrice","handleClick","OperationsTable","operations","operation","cssStyles","type","priceUSD","priceETH","amount","totalETH","moment","unix","time","fromNow","textDecoration","maker","substring","borderBottom","fetchCurrency","pairAddress","getCurrenciesTop","initialState","undefined","wsSlice","createSlice","reducers","openWebsocket","state","action","WebSocket","payload","closeWebsocket","close","actions","wsReducer","reducer","store","configureStore","websocket","resolutionToMinutes","currentInterval","datafeed","onReady","callback","setTimeout","supported_resolutions","searchSymbols","resolveSymbol","symbolName","onSymbolResolveCallback","description","ticker","full_name","exchange","listed_exchange","format","session","minmov","pricescale","timezone","has_intraday","has_daily","has_weekly_and_monthly","currency_code","has_no_volume","getBars","symbolInfo","interval","periodParams","onHistoryCallback","onErrorCallback","firstDataRequest","dispatch","getChartInfo","then","res","subscribeBars","onRealtimeCallback","ws","getState","addEventListener","event","JSON","parse","subscribe","cb","unsubscribeBars","Chart","tvWidget","setTvWidget","containerRef","useRef","viewWidget","Widget","symbol","library_path","theme","locale","disabled_features","charts_storage_url","charts_storage_api_version","client_id","user_id","fullscreen","autosize","studies_overrides","current","remove","ref","useAppSelector","useSelector","Dashboard","id","wsConnection","s","topData","setTopData","setData","setOperations","lastEvent","setLastEvent","trade_data","fetchData","op","concat","pop","Button","searchOrNotFoundContainer","flex","App","path","exact","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bffef8a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.14aec451.png\";","export default __webpack_public_path__ + \"static/media/nsfw-logo.f21ea58f.png\";","import {TableCell, TableHead, TableRow} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport const CurrenciesTableHead = ({ cellStyle } : { cellStyle: any }) => (\r\n    <TableHead>\r\n        <TableRow>\r\n            <TableCell width=\"10%\" className={cellStyle}>DEXs</TableCell>\r\n            <TableCell width=\"20%\" className={cellStyle}>Name</TableCell>\r\n            <TableCell width=\"12.5%\" className={cellStyle}>Volume</TableCell>\r\n            <TableCell width=\"12.5%\" className={cellStyle}>Liquidity</TableCell>\r\n            <TableCell width=\"20%\" className={cellStyle}>Price</TableCell>\r\n            <TableCell width=\"10%\" className={cellStyle}>Change</TableCell>\r\n        </TableRow>\r\n    </TableHead>\r\n)\r\n","export const PercentageIndicatorUp = () => (\r\n    <svg\r\n        style={{ verticalAlign: 'sub', margin: '0px 4px 0' }}\r\n        stroke=\"currentColor\"\r\n        fill=\"currentColor\"\r\n        strokeWidth=\"0\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"14.6px\" height=\"14.6px\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <path d=\"M5 15L19 15 12 7z\"/>\r\n    </svg>\r\n)\r\n\r\nexport const PercentageIndicatorZero = () => (\r\n    <svg\r\n        style={{ verticalAlign: 'middle', margin: '0px 8px 2px' }}\r\n        stroke=\"currentColor\"\r\n        fill=\"currentColor\"\r\n        strokeWidth=\"0\"\r\n        viewBox=\"0 0 16 16\"\r\n        height=\"7px\" width=\"7px\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M6.95.435c.58-.58 1.52-.58 2.1 0l6.515 6.516c.58.58.58 1.519 0 2.098L9.05 15.565c-.58.58-1.519.58-2.098 0L.435 9.05a1.482 1.482 0 010-2.098L6.95.435z\"\r\n            clipRule=\"evenodd\"\r\n        />\r\n    </svg>\r\n)\r\n\r\nexport const PercentageIndicatorDown = () => (\r\n    <svg\r\n        style={{ verticalAlign: 'sub', margin: '0px 4px 0' }}\r\n        stroke=\"currentColor\"\r\n        fill=\"currentColor\"\r\n        strokeWidth=\"0\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"14.6px\" height=\"14.6px\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <path d=\"M11.998 17L18.998 9 4.998 9z\"/>\r\n    </svg>\r\n)\r\n","import {\r\n    PercentageIndicatorDown,\r\n    PercentageIndicatorUp, PercentageIndicatorZero\r\n} from \"../../../components/PercentageIndicator/PercentageIndicator\";\r\nimport React from 'react'\r\n\r\nexport const PercentageChangeCell = ({ percentage } : { percentage: number }) => {\r\n    const text = Math\r\n        .abs(percentage)\r\n        .toLocaleString(\r\n            'en-US',\r\n            { minimumFractionDigits: 2, maximumFractionDigits: 2 }\r\n        ) + '%'\r\n\r\n    if (percentage > 0) {\r\n        return (\r\n            <span style={{ color: 'rgb(0, 195, 147)' }}>\r\n                <PercentageIndicatorUp/>\r\n                {text}\r\n            </span>\r\n        )\r\n    } else if (percentage < 0) {\r\n        return (\r\n            <span style={{ color: 'rgb(239, 66, 91)' }}>\r\n                <PercentageIndicatorDown/>\r\n                {text}\r\n            </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <span style={{ color: 'rgb(107, 124, 118)' }}>\r\n                <PercentageIndicatorZero/>\r\n                {text}\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","export function formatMoney(money: number) {\r\n    if (money < 1000) {\r\n        return money.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        })\r\n    } else if (money >= 1000 && money < 1_000_000) {\r\n        return (money / 1000).toLocaleString('en-US', {\r\n            maximumFractionDigits: 3\r\n        }) + 'K'\r\n    } else if (money >= 1_000_000) {\r\n        return (money / 1_000_000).toLocaleString('en-US', {\r\n            maximumFractionDigits: 3\r\n        }) + 'M'\r\n    }\r\n}\r\n","export const backendAddress = 'https://mock.realgrace.me'\r\nexport const backendWSAddress = 'wss://mock.realgrace.me/ws'\r\n\r\nexport const nameToSwap: Record<string, string> = {\r\n    sushiswap: 'https://www.defined.fi/images/icons/exchanges/sushiswap.png',\r\n    pancakeswap: 'https://www.defined.fi/images/icons/exchanges/pancakeswap.png',\r\n    uniswap: 'https://www.defined.fi/images/icons/exchanges/uniswap.png',\r\n    quickSwap: 'https://www.defined.fi/images/icons/exchanges/quickswap.png'\r\n}\r\n","import {backendAddress} from \"../constants\";\r\n\r\nexport interface FoundedCurrency {\r\n    dex: string | string[]\r\n    name: {\r\n        iconUrl?: string\r\n        title: string\r\n    }\r\n    volume: number\r\n    liquidity: number\r\n    price: number\r\n    change: number\r\n    address: string\r\n}\r\n\r\nexport async function searchCurrency(name: string): Promise<FoundedCurrency[]> {\r\n    const request = await fetch(`${backendAddress}/currency/search?query=${name}`)\r\n\r\n    return await request.json()\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport {\r\n    Avatar,\r\n    AvatarGroup, CircularProgress,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow, Typography\r\n} from \"@mui/material\";\r\n\r\nimport { Box } from \"@mui/material\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {CurrenciesTableHead} from \"./DumbComponents/TableHead\";\r\nimport {PercentageChangeCell} from \"./DumbComponents/PercentageChangeCell\";\r\nimport {formatMoney} from \"../../utils/formatMoney\";\r\nimport {FoundedCurrency, searchCurrency} from \"../../api/methods/searchCurrency\";\r\nimport {useHistory} from \"react-router\";\r\n\r\ninterface CurrenciesTableProps {\r\n    searchRequest: string\r\n}\r\n\r\nexport const CurrenciesTable = (props: CurrenciesTableProps) => {\r\n    const [loading, setIsLoading] = useState(true)\r\n    const [currencies, setCurrencies] = useState<FoundedCurrency[]>([])\r\n    const history = useHistory()\r\n\r\n    const styles = useStyles()\r\n\r\n    useEffect(() => {\r\n        async function search() {\r\n            setCurrencies(await searchCurrency(props.searchRequest))\r\n            setIsLoading(false)\r\n        }\r\n\r\n        setIsLoading(true)\r\n        void search()\r\n    }, [props.searchRequest])\r\n\r\n    if (loading || !currencies.length) {\r\n        return (\r\n            <div style={{ height: '80px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                {loading ? (\r\n                    <CircularProgress/>\r\n                ) : (\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        sx={{\r\n                            fontFamily: 'Poppins',\r\n                            color: 'rgb(143, 134, 235)'\r\n                        }}\r\n                    >\r\n                        Currencies not found.\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }} className={styles.box}>\r\n            <Paper sx={{ width: '100%', mb: 2 }} elevation={0}>\r\n                <TableContainer>\r\n                    <Table\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size=\"medium\"\r\n                    >\r\n                        <CurrenciesTableHead\r\n                            cellStyle={styles.cell}\r\n                        />\r\n                        <TableBody>\r\n                            {currencies\r\n                                .map((row, index) => (\r\n                                    <TableRow\r\n                                        hover\r\n                                        className={styles.dataRow}\r\n                                        onClick={() => {\r\n                                            history.push('/' + row.address)\r\n                                        }}\r\n                                    >\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            {Array.isArray(row.dex) ? (\r\n                                                <AvatarGroup max={2}>\r\n                                                    {row.dex.map(url => (\r\n                                                        <Avatar className={styles.image} src={url}/>\r\n                                                    ))}\r\n                                                </AvatarGroup>\r\n                                            ) : <Avatar className={styles.image} src={row.dex}/>}\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            <div>\r\n                                                <Avatar className={styles.image} src={row.name.iconUrl}/>\r\n                                                <span>{row.name.title}</span>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            <span>${formatMoney(row.volume)}</span>\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            <span>${formatMoney(row.liquidity)}</span>\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            <span>${row.price}</span>\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            <PercentageChangeCell percentage={row.change} />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    box: {\r\n        '&>.MuiPaper-root': {\r\n            backgroundColor: 'transparent',\r\n            border: 'none',\r\n            minWidth: '700px'\r\n        },\r\n\r\n        overflow: 'auto'\r\n    },\r\n    cell: {\r\n        fontFamily: 'Poppins !important',\r\n        fontWeight: 400,\r\n        color: 'rgb(115, 104, 231) !important',\r\n        border: 'none !important',\r\n\r\n        '&:not(:first-child)': {\r\n            paddingLeft: '0 !important',\r\n            paddingRight: '0 !important'\r\n        },\r\n\r\n        '&:first-child': {\r\n            paddingRight: '0 !important'\r\n        }\r\n    },\r\n\r\n    image: {\r\n        width: '20px !important',\r\n        height: '20px !important'\r\n    },\r\n\r\n    dataRow: {\r\n        '&>.MuiTableCell-root:first-child': {\r\n            paddingLeft: '16px',\r\n\r\n            '&>.MuiAvatarGroup-root': {\r\n                marginLeft: '-2px',\r\n                width: 'fit-content',\r\n\r\n                '&>div': {\r\n                    border: '2px solid rgb(26, 20, 51)'\r\n                }\r\n            }\r\n        },\r\n\r\n        '&>.MuiTableCell-root:nth-child(2)>div': {\r\n            display: 'flex',\r\n            fontFamily: 'Poppins',\r\n            fontWeight: '500',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n\r\n            '&>span': {\r\n                marginLeft: '8px'\r\n            },\r\n\r\n            fontSize: '1.3em'\r\n        },\r\n\r\n        '&>.MuiTableCell-root': {\r\n            padding: '8px 0',\r\n            border: 'none',\r\n\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n\r\n            color: 'white',\r\n            fontFamily: 'Fira Mono',\r\n        },\r\n\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(80, 72, 161, 0.3) !important',\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n})\r\n","interface MockTableRecord {\r\n    dex: string | string[]\r\n    name: {\r\n        iconUrl?: string\r\n        title: string\r\n    }\r\n    volume: number\r\n    liquidity: number\r\n    price: number\r\n    change: number\r\n}\r\n\r\nexport const defaultIcon = 'https://d3kdei7cs9pk0w.cloudfront.net/56_0x4bd17003473389a42daf6a0a729f6fdb328bbbd7_small.png'\r\n\r\nexport enum SwapType {\r\n    sushiswap = 'https://www.defined.fi/images/icons/exchanges/sushiswap.png',\r\n    pancakeswap = 'https://www.defined.fi/images/icons/exchanges/pancakeswap.png',\r\n    uniswap = 'https://www.defined.fi/images/icons/exchanges/uniswap.png',\r\n    quickSwap = 'https://www.defined.fi/images/icons/exchanges/quickswap.png'\r\n}\r\n\r\nexport function getTableDataMock(): MockTableRecord[] {\r\n    return [\r\n        {\r\n            dex: SwapType.sushiswap, name: { iconUrl: defaultIcon, title: 'AFARM' },\r\n            volume: 62.00, liquidity: 1270, price: 0.430907, change: 12.3\r\n        },\r\n        {\r\n            dex: SwapType.sushiswap, name: { iconUrl: defaultIcon, title: 'BUTTON' },\r\n            volume: 10.00, liquidity: 98200, price: 0.0236985, change: 0.00\r\n        },\r\n        {\r\n            dex: SwapType.sushiswap, name: { iconUrl: defaultIcon, title: 'DRAGON' },\r\n            volume: 22.00, liquidity: 438.00, price: 0.0332299, change: -9.15\r\n        },\r\n        {\r\n            dex: SwapType.pancakeswap, name: { iconUrl: defaultIcon, title: 'VAI' },\r\n            volume: 1090000, liquidity: 13330000, price: 1.00822, change: 0.00\r\n        },\r\n        {\r\n            dex: SwapType.uniswap, name: { iconUrl: defaultIcon, title: 'EJS' },\r\n            volume: 2044000, liquidity: 323900, price: 0.0693538, change: -29.8\r\n        },\r\n        {\r\n            dex: [SwapType.quickSwap, SwapType.sushiswap], name: { iconUrl: defaultIcon, title: 'FEAR' },\r\n            volume: 29600, liquidity: 747600, price: 0.799110, change: -5.25\r\n        },\r\n    ]\r\n}\r\n","import {\r\n    Dialog,\r\n    DialogContent,\r\n    Icon,\r\n    InputAdornment,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {CurrenciesTable} from \"./CurrenciesTable\";\r\n\r\ninterface SearchProps {\r\n    query: string\r\n\r\n    visible: boolean\r\n    onClose: (query: string) => void\r\n}\r\n\r\nexport const Search = (props: SearchProps) => {\r\n    const [query, setQuery] = React.useState(props.query)\r\n    const muiStyles = useStyles()\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.visible}\r\n            onClose={() => props.onClose(query)}\r\n            maxWidth=\"md\"\r\n            fullWidth\r\n            classes={{ container: muiStyles.dialog }}\r\n        >\r\n            <DialogContent>\r\n                <TextField\r\n                    value={query}\r\n                    onChange={(e) =>\r\n                        setQuery(e.currentTarget.value)\r\n                    }\r\n                    className={muiStyles.searchField}\r\n                    placeholder=\"Search by token name, ticker, address or pair\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Icon style={{ color: 'rgb(115, 104, 231)' }}>\r\n                                    <svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg>\r\n                                </Icon>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n\r\n                <CurrenciesTable searchRequest={query}/>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    dialog: {\r\n        alignItems: 'flex-start !important',\r\n\r\n        '&>.MuiPaper-root': {\r\n            backgroundColor: 'rgb(26, 20, 51) !important',\r\n            borderRadius: '8px',\r\n            maxWidth: '700px !important',\r\n            marginTop: '8px',\r\n\r\n            border: '2px solid rgb(115, 104, 231)',\r\n\r\n            '&>.MuiDialogContent-root': {\r\n                padding: 0,\r\n\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n\r\n                '&>.MuiFormControl-root': {\r\n                    marginTop: '0 !important'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    searchField: {\r\n        width: '100%',\r\n\r\n        boxSizing: 'border-box',\r\n        outline: 'none',\r\n\r\n        '&>.MuiOutlinedInput-root': {\r\n            padding: '4px 20px',\r\n            borderRadius: '8px',\r\n            backgroundColor: 'rgb(26, 20, 51)',\r\n            color: 'rgb(143, 134, 235)',\r\n            fontFamily: 'Poppins',\r\n\r\n            '&>.MuiOutlinedInput-notchedOutline': {\r\n                border: 'none',\r\n            }\r\n        },\r\n    },\r\n})\r\n","export default __webpack_public_path__ + \"static/media/twitter-app.f3dd40ad.svg\";","export default __webpack_public_path__ + \"static/media/telegram.af763f87.svg\";","export default __webpack_public_path__ + \"static/media/discord.ff388ade.svg\";","import React, { useState } from 'react'\r\nimport styles from './home.module.css'\r\nimport {AppBar, Icon, InputAdornment, TextField, Toolbar} from \"@mui/material\"\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport logo from '../../img/logo.png'\r\nimport nsfwLogo from '../../img/nsfw-logo.png'\r\n\r\nimport {Search} from \"./Search\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport twitterLogo from '../../img/twitter-app.svg'\r\nimport telegramLogo from '../../img/telegram.svg'\r\nimport discordLogo from '../../img/discord.svg'\r\n\r\nexport const Home = () => {\r\n    const muiStyles = useStyles()\r\n\r\n    const [visible, setIsVisible] = useState(false)\r\n    const [query, setQuery] = useState('')\r\n\r\n    return (\r\n        <div className={styles['page-container']}>\r\n            <AppBar elevation={0} position=\"fixed\">\r\n                <Toolbar>\r\n                    <Link to=\"/\">\r\n                        <img className={styles['logo']} src={logo} alt=\"logo\"/>\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={styles['header']}>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                    <img src={nsfwLogo} alt=\"nsfw-logo\" className={styles['nsfw-logo']}/>\r\n\r\n                    <Search\r\n                        query={query}\r\n                        visible={visible}\r\n                        onClose={q => {\r\n                            setIsVisible(false)\r\n                            setQuery(q)\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <TextField\r\n                    onClick={() => setIsVisible(true)}\r\n                    value={query}\r\n                    className={`${styles['search']} ${muiStyles.searchField} ${visible ? styles['visible'] : styles['hidden']}`}\r\n                    placeholder=\"Search by token name, ticker, address or pair\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Icon style={{ color: 'rgb(115, 104, 231)' }}>\r\n                                    <svg stroke=\"currentColor\" fill=\"none\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" strokeLinecap=\"round\" strokeLinejoin=\"round\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"11\" cy=\"11\" r=\"8\"/><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"/></svg>\r\n                                </Icon>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className={styles['social-links']}>\r\n                <div>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://discord.gg/H2qdv35k4k\">\r\n                        <img src={discordLogo} alt=\"discord logo\"/>\r\n\r\n                        Discord\r\n                    </a>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/boobaAnnouncements\">\r\n                        <img src={telegramLogo} alt=\"discord logo\"/>\r\n\r\n                        Telegram Announcements\r\n                    </a>\r\n                </div>\r\n\r\n                <div>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/boobaProtocol\">\r\n                        <img src={telegramLogo} alt=\"discord logo\"/>\r\n\r\n                        Telegram Official Chat\r\n                    </a>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/Booba_Fi\">\r\n                        <img src={twitterLogo} alt=\"discord logo\"/>\r\n\r\n                        Twitter\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    searchField: {\r\n        width: '90%',\r\n        maxWidth: '700px',\r\n        marginTop: '64px !important',\r\n\r\n        boxSizing: 'border-box',\r\n        outline: 'none',\r\n\r\n        '&>.MuiOutlinedInput-root': {\r\n            padding: '4px 20px',\r\n            borderRadius: '8px',\r\n            backgroundColor: 'rgb(26, 20, 51)',\r\n            color: 'rgb(143, 134, 235)',\r\n            fontFamily: 'Poppins',\r\n\r\n            '&:hover': {\r\n                '&>.MuiOutlinedInput-notchedOutline': {\r\n                    borderColor: 'rgba(115, 104, 231, 0.533)',\r\n                    borderWidth: '2px'\r\n                }\r\n            }\r\n        },\r\n    }\r\n})\r\n\r\n","import React from 'react'\r\nimport styles from './styles/currencies-line.module.css'\r\nimport {Currency} from \"../../../api/mock/getLineData\";\r\nimport {Tooltip} from \"@mui/material\";\r\n\r\ninterface CurrenciesLineProps {\r\n    currencies: Currency[]\r\n}\r\n\r\nconst CurrencyPercentageChangeIcon = ({ percentage } : { percentage: number }) => {\r\n    if (percentage > 0) {\r\n        return (\r\n            <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 1024 1024\" color=\"#00c393\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\" style={{ color: 'rgb(0, 195, 147)', verticalAlign: 'middle', }}><path d=\"M868 545.5L536.1 163a31.96 31.96 0 0 0-48.3 0L156 545.5a7.97 7.97 0 0 0 6 13.2h81c4.6 0 9-2 12.1-5.5L474 300.9V864c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V300.9l218.9 252.3c3 3.5 7.4 5.5 12.1 5.5h81c6.8 0 10.5-8 6-13.2z\"/></svg>\r\n        )\r\n    } else if (percentage < 0) {\r\n        return (\r\n            <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 1024 1024\" color=\"#ef425b\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\" style={{ color: 'rgb(239, 66, 91)', verticalAlign: 'middle' }}><path d=\"M862 465.3h-81c-4.6 0-9 2-12.1 5.5L550 723.1V160c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v563.1L255.1 470.8c-3-3.5-7.4-5.5-12.1-5.5h-81c-6.8 0-10.5 8.1-6 13.2L487.9 861a31.96 31.96 0 0 0 48.3 0L868 478.5c4.5-5.2.8-13.2-6-13.2z\"/></svg>\r\n        )\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\nexport const CurrenciesLine = ({ currencies } : CurrenciesLineProps) => (\r\n    <div className={styles['currencies-line']}>\r\n        {currencies.map((c, index) => (\r\n            <Tooltip\r\n                title={`${c.fullName} ${\r\n                    c.changePercentage.toLocaleString(\r\n                        'en-US',\r\n                        { minimumFractionDigits: 2, maximumFractionDigits: 2 }\r\n                    )\r\n                }%`}\r\n                key={index}\r\n            >\r\n                <div className={styles['currency-button']}>\r\n                    <span className={styles['currency-position']}>{index + 1}</span>\r\n\r\n                    <CurrencyPercentageChangeIcon percentage={c.changePercentage}/>\r\n\r\n                    <span className={styles['currency-name']}>{c.name}</span>\r\n                </div>\r\n            </Tooltip>\r\n        ))}\r\n    </div>\r\n)\r\n\r\n","export async function copyToClipboard(text: string) {\r\n    if (!navigator.clipboard) {\r\n        return;\r\n    }\r\n\r\n    try {\r\n        await navigator.clipboard.writeText(text)\r\n        return true\r\n    } catch {\r\n        return false\r\n    }\r\n}\r\n","import React, {useState} from 'react'\r\nimport styles from './styles/currency-data.module.css'\r\nimport {Alert, Badge, Snackbar, Tooltip, Typography} from \"@mui/material\";\r\nimport {defaultIcon} from \"../../../api/mock/getTableData\";\r\nimport {PercentageChangeCell} from \"../../home/DumbComponents/PercentageChangeCell\";\r\nimport {formatMoney} from \"../../../utils/formatMoney\";\r\nimport {CurrencyData} from \"../../../api/methods/fetchCurrency\";\r\nimport {copyToClipboard} from \"../../../utils/clipboard\";\r\nimport {nameToSwap} from \"../../../api/constants\";\r\n\r\ninterface CurrencyInfoProps {\r\n    data: CurrencyData\r\n}\r\n\r\nexport const CurrencyInfo = (props: CurrencyInfoProps) => {\r\n    const [isError, setIsError] = useState(false)\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n\r\n    async function handleClick() {\r\n        setIsError(!(await copyToClipboard(props.data.address)))\r\n        setSnackOpen(true)\r\n    }\r\n\r\n    return (\r\n        <div className={styles['currency-info-container']}>\r\n            <Snackbar open={snackOpen} autoHideDuration={2000} onClose={() => setSnackOpen(false)}>\r\n                <Alert severity={isError ? 'error' : 'success'} sx={{ width: '100%' }}>\r\n                    {isError ?\r\n                        'An unexpected error occurred.' : 'Contract address copied in your clipboard!'}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <div className={styles['currency-info']}>\r\n                <Badge\r\n                    badgeContent={<img className={styles['swap-icon']} src={nameToSwap[props.data.swap]} alt=\"\"/>}\r\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                >\r\n                    <img className={styles['icon']} alt=\"\" src={defaultIcon} />\r\n                </Badge>\r\n\r\n                <div className={styles['currency-data']}>\r\n                    <Typography variant=\"body1\">\r\n                        {props.data.name}/{props.data.secondToken}\r\n                    </Typography>\r\n\r\n                    <div>\r\n                        <Typography variant=\"body1\">\r\n                            ${props.data.cost}\r\n                        </Typography>\r\n\r\n                        <PercentageChangeCell percentage={props.data.changePercentage}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles['other-info']}>\r\n                <div>\r\n                    <span>Liquidity</span>\r\n                    <p>${formatMoney(props.data.liquidity)}</p>\r\n                </div>\r\n                <div>\r\n                    <span>Volume</span>\r\n                    <p>${formatMoney(props.data.volume)}</p>\r\n                </div>\r\n                <div>\r\n                    <span>Mkt Cap</span>\r\n                    <p>{props.data.mktCap ? formatMoney(props.data.volume) : '——'}</p>\r\n                </div>\r\n                <div>\r\n                    <span>Supply</span>\r\n                    <p>{props.data.supply ? formatMoney(props.data.volume) : '——'}</p>\r\n                </div>\r\n                <div>\r\n                    <span>ETH Price</span>\r\n                    <p>${formatMoney(props.data.ethPrice)}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles['buttons-panel']}>\r\n                <div className={styles['trade-button']}>\r\n                    Trade\r\n                </div>\r\n                <Tooltip title={`Copy ${props.data.address}`}>\r\n                    <div className={styles['contract-button']} onClick={() => void handleClick()}>\r\n                        Contract\r\n\r\n                        <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20,2H10C8.897,2,8,2.897,8,4v4H4c-1.103,0-2,0.897-2,2v10c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2v-4h4 c1.103,0,2-0.897,2-2V4C22,2.897,21.103,2,20,2z M4,20V10h10l0.002,10H4z M20,14h-4v-4c0-1.103-0.897-2-2-2h-4V4h10V14z\"/><path d=\"M6 12H12V14H6zM6 16H12V18H6z\"/></svg>\r\n                    </div>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {Operation} from \"../../../api/mock/getOperations\";\r\nimport {\r\n    Box,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nimport cssStyles from './styles/operations-table.module.css'\r\nimport moment from \"moment-timezone\";\r\n\r\ninterface OperationsTableProps {\r\n    operations: Operation[]\r\n}\r\n\r\nexport const OperationsTable = (props: OperationsTableProps) => {\r\n    const styles = useStyles()\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', overflow: 'auto' }} className={styles.box}>\r\n            <Paper sx={{ width: '100%', mb: 2 }} elevation={0}>\r\n                <TableContainer>\r\n                    <Table\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size=\"medium\"\r\n                        style={{ minWidth: '842px' }}\r\n                    >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell width=\"14%\" className={styles.cell}>Type</TableCell>\r\n                                <TableCell width=\"14%\" className={styles.cell}>Price USD</TableCell>\r\n                                <TableCell width=\"14%\" className={styles.cell}>Price ETH</TableCell>\r\n                                <TableCell width=\"14%\" className={styles.cell}>Amount</TableCell>\r\n                                <TableCell width=\"14%\" className={styles.cell}>Total ETH</TableCell>\r\n                                <TableCell width=\"14%\" className={styles.cell}>Time</TableCell>\r\n                                <TableCell width=\"14%\" className={styles.cell}>Maker</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {props.operations\r\n                                .map((operation, index) => (\r\n                                    <TableRow\r\n                                        hover\r\n                                        className={styles.dataRow}\r\n                                        style={{\r\n                                            backgroundColor: index % 2 === 0 ? '#141414' : void 0\r\n                                        }}\r\n                                        key={index}\r\n                                    >\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            <span className={cssStyles[`label-` + operation.type]}>\r\n                                                {operation.type === 'buy' ? 'Buy' : 'Sell'}\r\n                                            </span>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            ${operation.priceUSD}\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            {operation.priceETH}\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            {operation.amount}\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            {operation.totalETH}\r\n                                        </TableCell>\r\n\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            {moment.unix(operation.time).fromNow()}\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            <a\r\n                                                style={{ color: 'rgb(129, 242, 200)', textDecoration: 'none' }}\r\n                                                href={`https://arbiscan.io/address/${operation.maker}`}>\r\n                                                ...{operation.maker\r\n                                                .substring(operation.maker.length - 11)}\r\n                                            </a>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    box: {\r\n        marginTop: '32px',\r\n\r\n        '&>.MuiPaper-root': {\r\n            border: 'none',\r\n\r\n            backgroundColor: '#191919',\r\n            borderRadius: '8px'\r\n        }\r\n    },\r\n    cell: {\r\n        fontFamily: 'Poppins !important',\r\n        fontWeight: 500,\r\n        color: 'white !important',\r\n        borderBottom: '1px solid #8a8a8a !important',\r\n\r\n        fontSize: '1rem !important',\r\n\r\n        '&:not(:first-child)': {\r\n            paddingLeft: '0 !important',\r\n            paddingRight: '0 !important'\r\n        },\r\n\r\n        '&:first-child': {\r\n            paddingRight: '0 !important'\r\n        }\r\n    },\r\n\r\n    image: {\r\n        width: '20px !important',\r\n        height: '20px !important'\r\n    },\r\n\r\n    dataRow: {\r\n        '&>.MuiTableCell-root:first-child': {\r\n            paddingLeft: '16px',\r\n        },\r\n\r\n        '&>.MuiTableCell-root': {\r\n            padding: '8px 0',\r\n            border: 'none',\r\n\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n\r\n            color: 'white',\r\n            fontFamily: 'Fira Mono',\r\n        },\r\n\r\n        '&>.MuiTableCell-root:nth-child(6)': {\r\n            padding: '8px 0',\r\n            border: 'none',\r\n\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n\r\n            color: 'white',\r\n            fontFamily: 'Poppins',\r\n        },\r\n\r\n        '&>.MuiTableCell-root:last-child': {\r\n            padding: '8px 0',\r\n            border: 'none',\r\n\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n\r\n            color: 'white',\r\n            fontFamily: 'Poppins',\r\n        },\r\n\r\n        '&:hover': {\r\n            backgroundColor: '#262626 !important',\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n})\r\n","import {backendAddress} from \"../constants\";\r\nimport {SwapType} from \"../mock/getTableData\";\r\nimport {Bar} from \"@charting-library\";\r\n\r\nexport interface Operation {\r\n    type: 'buy' | 'sell'\r\n\r\n    priceUSD: number\r\n    priceETH: number\r\n\r\n    amount: number\r\n\r\n    totalETH: number\r\n    time: number\r\n    maker: string\r\n}\r\n\r\nexport interface CurrencyData {\r\n    name: string\r\n    secondToken: string\r\n\r\n    address: string\r\n\r\n    changePercentage: number\r\n    cost: number\r\n\r\n    liquidity: number\r\n    volume: number\r\n    ethPrice: number\r\n\r\n    mktCap?: string\r\n    supply?: string\r\n\r\n    swap: SwapType\r\n\r\n    trade_data: {\r\n        operations: Operation[]\r\n    }\r\n}\r\n\r\ninterface NotFoundAnswer {\r\n    detail: string\r\n}\r\n\r\nexport async function fetchCurrency(pairAddress: string): Promise<CurrencyData | NotFoundAnswer> {\r\n    const request = await fetch(`${backendAddress}/currency/fetch/${pairAddress}`)\r\n\r\n    // TO DO remove this lines after back-end api update.\r\n    const data = await request.json() as CurrencyData | NotFoundAnswer\r\n\r\n    if (data && 'address' in data && !data.secondToken) {\r\n        data.secondToken = 'ETH'\r\n    }\r\n\r\n    return data\r\n\r\n    // and uncomment this\r\n    // return await request.json()\r\n}\r\n\r\nexport type WebSocketEvent = { type: 'OPERATIONS', data: Operation[] } | { type: 'CHARTS', data: Bar[] }\r\n","import {backendAddress} from \"../constants\";\r\n\r\nexport interface TopCurrency {\r\n    changePercentage: number\r\n    name: string\r\n    fullName: string\r\n}\r\n\r\nexport async function getCurrenciesTop(): Promise<TopCurrency[]> {\r\n    const request = await fetch(`${backendAddress}/currency/top`)\r\n\r\n    return await request.json()\r\n}\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\"\r\nimport {RootState} from \"../store\";\r\n\r\n// Define a type for the slice state\r\ninterface WSState {\r\n    value?: WebSocket\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: WSState = {\r\n    value: undefined,\r\n}\r\n\r\nexport const wsSlice = createSlice({\r\n    name: 'websocket',\r\n    initialState,\r\n    reducers: {\r\n        // action payload = websocket address\r\n        openWebsocket: (state, action: PayloadAction<string>) => {\r\n            state.value = new WebSocket(action.payload)\r\n        },\r\n\r\n        closeWebsocket(state) {\r\n            state.value?.close()\r\n\r\n            state.value = undefined\r\n        }\r\n    },\r\n})\r\n\r\nexport const { openWebsocket, closeWebsocket } = wsSlice.actions\r\nexport const selectWebsocket = (state: RootState) => state.websocket.value\r\n\r\nexport const wsReducer = wsSlice.reducer\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport { wsReducer } from \"./slices/websocket.slice\"\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        websocket: wsReducer\r\n    },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import { IBasicDataFeed, ResolutionString, Bar } from '@charting-library'\r\nimport {subscribe, unsubscribe} from './stream';\r\nimport {backendAddress} from \"../../../api/constants\";\r\n\r\nconst hourInMinutes = 60\r\n\r\nexport const resolutionToMinutes: Record<string, number> = {\r\n    1: 1,\r\n    5: 5,\r\n    15: 15,\r\n    30 : 30,\r\n    60 : hourInMinutes,\r\n    240 : 4 * hourInMinutes,\r\n    720 : 12 * hourInMinutes,\r\n    '1D' : 24 * hourInMinutes\r\n}\r\n\r\nlet currentInterval: string = '1D'\r\n\r\nexport const datafeed: IBasicDataFeed = {\r\n    onReady: callback => {\r\n        setTimeout(() => callback({\r\n            supported_resolutions: [\r\n                '1',\r\n                '5',\r\n                '15',\r\n                '30',\r\n                '1h',\r\n                '4h',\r\n                '12h',\r\n                '1d'\r\n            ] as ResolutionString[]\r\n        }))\r\n    },\r\n\r\n    searchSymbols: () => {},\r\n    resolveSymbol: (symbolName, onSymbolResolveCallback) => {\r\n        setTimeout(() => {\r\n            onSymbolResolveCallback({\r\n                name: symbolName,\r\n                description: symbolName,\r\n                ticker: symbolName,\r\n                full_name: '',\r\n                exchange: '',\r\n                listed_exchange: '',\r\n                format: 'price',\r\n                supported_resolutions: [\r\n                    '1',\r\n                    '5',\r\n                    '15',\r\n                    '30',\r\n                    '1h',\r\n                    '4h',\r\n                    '12h',\r\n                    '1d'\r\n                ] as ResolutionString[],\r\n                type: 'crypto',\r\n                session: '24x7',\r\n                minmov: 1,\r\n                pricescale: 100, // \tor 100\r\n                timezone: 'Etc/UTC',\r\n                has_intraday: true,\r\n                has_daily: true,\r\n                has_weekly_and_monthly: true,\r\n                currency_code: symbolName,\r\n\r\n                has_no_volume: true,\r\n            })\r\n        })\r\n    },\r\n\r\n    getBars: (symbolInfo, interval, periodParams, onHistoryCallback, onErrorCallback) => {\r\n        if (!periodParams.firstDataRequest) {\r\n            return onHistoryCallback([])\r\n        }\r\n\r\n        if (interval !== currentInterval) {\r\n            currentInterval = interval\r\n            unsubscribe()\r\n        }\r\n\r\n        const getChartInfo = async () => {\r\n            const data = await (await fetch(\r\n                `${backendAddress}/currency/charts/${symbolInfo.name}?resolution=${resolutionToMinutes[interval]}`\r\n            )).json() as Bar[]\r\n\r\n            if (data && data.length > 0) {\r\n                return data\r\n            } else {\r\n                return []\r\n            }\r\n        }\r\n\r\n\r\n        getChartInfo().then((res) => onHistoryCallback(res))\r\n    },\r\n\r\n    subscribeBars: (symbolInfo, interval, onRealtimeCallback) => {\r\n        subscribe(interval, symbolInfo.name, cb => onRealtimeCallback(cb))\r\n    },\r\n\r\n    unsubscribeBars: () => {},\r\n}\r\n","import {backendWSAddress} from \"../../../api/constants\";\r\nimport { SubscribeBarsCallback, ResolutionString } from \"@charting-library\";\r\nimport {WebSocketEvent} from \"../../../api/methods/fetchCurrency\";\r\nimport {store} from \"../../../redux/store\";\r\nimport { openWebsocket, closeWebsocket } from \"../../../redux/slices/websocket.slice\";\r\nimport {resolutionToMinutes} from \"./datafeed\";\r\n\r\nexport function subscribe(\r\n    interval: ResolutionString,\r\n    symbolName: string,\r\n    callback: SubscribeBarsCallback\r\n) {\r\n    store.dispatch(openWebsocket(\r\n        `${backendWSAddress}/${symbolName}?resolution=${resolutionToMinutes[interval]}`\r\n    ))\r\n\r\n    const ws = store.getState().websocket.value\r\n\r\n    if (ws) {\r\n        ws.addEventListener('message', (event) => {\r\n            const data = JSON.parse(event.data) as WebSocketEvent\r\n\r\n            if (data.type === 'CHARTS' && data.data[0]) {\r\n                callback(data.data[0])\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function unsubscribe() {\r\n    store.dispatch(closeWebsocket())\r\n}\r\n\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {ChartingLibraryWidgetOptions, IChartingLibraryWidget, ResolutionString, widget as Widget} from \"@charting-library\";\r\nimport {datafeed} from \"./api/datafeed\";\r\n\r\ninterface ChartProps {\r\n    symbol: string\r\n    height: number\r\n}\r\n\r\nexport interface ChartContainerProps {\r\n    symbol: ChartingLibraryWidgetOptions['symbol'];\r\n    interval: ChartingLibraryWidgetOptions['interval'];\r\n\r\n    libraryPath: ChartingLibraryWidgetOptions['library_path'];\r\n    chartsStorageUrl: ChartingLibraryWidgetOptions['charts_storage_url'];\r\n    chartsStorageApiVersion: ChartingLibraryWidgetOptions['charts_storage_api_version'];\r\n    clientId: ChartingLibraryWidgetOptions['client_id'];\r\n    userId: ChartingLibraryWidgetOptions['user_id'];\r\n    fullscreen: ChartingLibraryWidgetOptions['fullscreen'];\r\n    autosize: ChartingLibraryWidgetOptions['autosize'];\r\n    studiesOverrides: ChartingLibraryWidgetOptions['studies_overrides'];\r\n}\r\n\r\nexport const Chart = (props: ChartProps) => {\r\n    const [tvWidget, setTvWidget] = useState<IChartingLibraryWidget | null>(null)\r\n    const containerRef = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n        const viewWidget = new Widget({\r\n            symbol: props.symbol,\r\n            datafeed: datafeed,\r\n            interval: '1D' as ResolutionString,\r\n            library_path: '/charting_library/',\r\n\r\n            height: props.height,\r\n\r\n            theme: 'Dark',\r\n            locale: 'en',\r\n            disabled_features: ['use_localstorage_for_settings', 'header_symbol_search'],\r\n            charts_storage_url: 'https://saveload.tradingview.com',\r\n            charts_storage_api_version: '1.1',\r\n            client_id: 'tradingview.com',\r\n            user_id: 'public_user_id',\r\n            fullscreen: false,\r\n            autosize: true,\r\n            studies_overrides: {},\r\n            container: containerRef.current as HTMLElement\r\n        })\r\n        setTvWidget(viewWidget)\r\n\r\n        return () => {\r\n            if (tvWidget) {\r\n                tvWidget.remove()\r\n            }\r\n        }\r\n    }, [containerRef])\r\n\r\n    return (\r\n        <div ref={containerRef} style={{ height: props.height }} />\r\n    )\r\n}\r\n","import {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\"\r\nimport {AppDispatch, RootState} from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import React, {useEffect, useState} from 'react'\r\nimport styles from './styles.module.css'\r\nimport {\r\n    AppBar,\r\n    Button,\r\n    CircularProgress,\r\n    Icon,\r\n    InputAdornment, TextField,\r\n    Toolbar,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport {Search} from \"../home/Search\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {CurrenciesLine} from \"./DumbComponents/CurrenciesLine\";\r\nimport {CurrencyInfo} from \"./DumbComponents/CurrencyInfo\";\r\nimport {OperationsTable} from \"./DumbComponents/OperationsTable\";\r\nimport logo from \"../../img/logo.png\";\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport {CurrencyData, fetchCurrency, Operation, WebSocketEvent} from \"../../api/methods/fetchCurrency\";\r\nimport {getCurrenciesTop, TopCurrency} from \"../../api/methods/getCurrenciesTop\";\r\nimport {Chart} from \"../../components/Chart/Chart\";\r\nimport {useAppSelector} from \"../../redux/hooks\";\r\n\r\nexport interface DashboardProps {\r\n    id?: string\r\n}\r\n\r\nexport const Dashboard = ({ id } : DashboardProps) => {\r\n    const wsConnection = useAppSelector(s => s.websocket.value)\r\n\r\n    const [visible, setIsVisible] = useState(false)\r\n\r\n    const [query, setQuery] = useState('')\r\n    const muiStyles = useStyles()\r\n\r\n    const [topData, setTopData] = useState<TopCurrency[]>([])\r\n    const [data, setData] = useState<CurrencyData>()\r\n    const [operations, setOperations] = useState<Operation[]>([])\r\n    const [lastEvent, setLastEvent] = useState<WebSocketEvent>()\r\n\r\n    const [loading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const data = await fetchCurrency(id || '')\r\n\r\n            if (data && 'trade_data' in data) {\r\n                setData(data)\r\n                setTopData(await getCurrenciesTop())\r\n\r\n                setOperations(data.trade_data.operations)\r\n            }\r\n\r\n            setIsLoading(false)\r\n        }\r\n\r\n        void fetchData()\r\n\r\n        return () => {\r\n            if (wsConnection) {\r\n                wsConnection.close()\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (wsConnection) {\r\n            wsConnection.addEventListener('message', e => {\r\n                setLastEvent(JSON.parse(e.data))\r\n            })\r\n        }\r\n    }, [wsConnection])\r\n\r\n    useEffect(() => {\r\n        if (!lastEvent)\r\n            return\r\n\r\n        if (lastEvent.type !== 'CHARTS') {\r\n            const op = lastEvent.data.concat(operations)\r\n\r\n            while (op.length > 10) {\r\n                op.pop()\r\n            }\r\n\r\n            setOperations(op)\r\n        }\r\n    }, [lastEvent])\r\n\r\n    return (\r\n        <div className={styles['page-container']}>\r\n            <AppBar elevation={0} position=\"fixed\">\r\n                <Toolbar>\r\n                    <Link to=\"/\">\r\n                        <img className={styles['logo']} src={logo} alt=\"logo\"/>\r\n                    </Link>\r\n\r\n                    <Search\r\n                        query={query}\r\n                        visible={visible}\r\n                        onClose={q => {\r\n                            setIsVisible(false)\r\n                            setQuery(q)\r\n                        }}\r\n                    />\r\n\r\n                    <TextField\r\n                        onClick={() => setIsVisible(true)}\r\n                        value={query}\r\n                        className={`${muiStyles.searchField} ${styles['search-field']}`}\r\n                        placeholder=\"Search by token name, ticker, address or pair\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Icon style={{ color: 'rgb(115, 104, 231)' }}>\r\n                                        <svg stroke=\"currentColor\" fill=\"none\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" strokeLinecap=\"round\" strokeLinejoin=\"round\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"11\" cy=\"11\" r=\"8\"/><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"/></svg>\r\n                                    </Icon>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n\r\n                    <Button\r\n                        className={styles['search-button']}\r\n                        onClick={() => setIsVisible(true)}\r\n                        sx={{ borderRadius: '50%', minWidth: 0, height: '40px' }}\r\n                    >\r\n                        <Icon style={{ color: 'rgb(115, 104, 231)', display: 'flex' }}>\r\n                            <svg stroke=\"currentColor\" fill=\"none\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" strokeLinecap=\"round\" strokeLinejoin=\"round\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"11\" cy=\"11\" r=\"8\"/><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"/></svg>\r\n                        </Icon>\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {loading ? (\r\n                // if loading\r\n                <div className={muiStyles.searchOrNotFoundContainer}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            ) : (\r\n                data ? (\r\n                    // if data && !loading\r\n                    <div className={styles['page-content']}>\r\n                        <CurrenciesLine\r\n                            currencies={topData}\r\n                        />\r\n\r\n                        <CurrencyInfo data={data} />\r\n\r\n                        <div style={{ width: '100%', marginTop: '32px', height: '400px' }}>\r\n                            <Chart\r\n                                symbol={id || ''}\r\n                                height={400}\r\n                            />\r\n                        </div>\r\n\r\n                        <OperationsTable operations={operations}/>\r\n                    </div>\r\n                ) : (\r\n                    // if !data && !loading\r\n                    <div className={muiStyles.searchOrNotFoundContainer}>\r\n                        <Typography\r\n                            variant=\"h3\"\r\n                            sx={{\r\n                                fontFamily: 'Poppins',\r\n                                color: 'rgb(137, 255, 211)'\r\n                            }}\r\n                        >\r\n                            Not Found.\r\n                        </Typography>\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    searchOrNotFoundContainer: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: '100vh',\r\n            flex: '1 1 0%',\r\n    },\r\n\r\n    searchField: {\r\n        width: '50%',\r\n        minWidth: '512px',\r\n        margin: '8px !important',\r\n\r\n        boxSizing: 'border-box',\r\n        outline: 'none',\r\n\r\n        '&>.MuiOutlinedInput-root': {\r\n            padding: '4px 20px',\r\n            borderRadius: '8px',\r\n            backgroundColor: 'rgb(26, 20, 51)',\r\n            color: 'rgb(143, 134, 235)',\r\n            fontFamily: 'Poppins',\r\n\r\n            '&:hover': {\r\n                '&>.MuiOutlinedInput-notchedOutline': {\r\n                    borderColor: 'rgba(115, 104, 231, 0.533)',\r\n                    borderWidth: '2px'\r\n                }\r\n            }\r\n        },\r\n    }\r\n})\r\n","import React from 'react'\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport {Home} from \"./pages/home/Home\";\nimport {Dashboard} from \"./pages/dashboard/Dashboard\";\n\ninterface DashboardProps {\n    match: {\n        params: {\n            id?: string\n        }\n    }\n}\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home/>\n                </Route>\n\n                <Route\n                    path=\"/:id\"\n                    component={(props : DashboardProps) => <Dashboard id={props.match.params.id}/>}\n                />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport './global.css'\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currency-info-container\":\"currency-data_currency-info-container__kcQLI\",\"currency-info\":\"currency-data_currency-info__kprRv\",\"currency-data\":\"currency-data_currency-data__1YiRE\",\"icon\":\"currency-data_icon__1l1Hs\",\"swap-icon\":\"currency-data_swap-icon__12kAm\",\"other-info\":\"currency-data_other-info__G2PND\",\"buttons-panel\":\"currency-data_buttons-panel__2KQ9m\",\"button\":\"currency-data_button__2CSZp\",\"trade-button\":\"currency-data_trade-button__kxj4r currency-data_button__2CSZp\",\"contract-button\":\"currency-data_contract-button__1-T8M currency-data_button__2CSZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page-container\":\"home_page-container__3U-1b\",\"header\":\"home_header__3hDZZ\",\"visible\":\"home_visible__FgSE_\",\"Show-Field\":\"home_Show-Field__2RNsu\",\"hidden\":\"home_hidden__8Jcic\",\"Hide-Field\":\"home_Hide-Field__31rCs\",\"logo\":\"home_logo__3uozE\",\"nsfw-logo\":\"home_nsfw-logo__2vkkf\",\"search\":\"home_search___dO-R\",\"social-links\":\"home_social-links__1dGWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page-container\":\"styles_page-container__1jBBo\",\"page-content\":\"styles_page-content__2Y8sZ\",\"search-button\":\"styles_search-button__ICxAs\",\"search-field\":\"styles_search-field__1g7QV\",\"logo\":\"styles_logo__236cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currencies-line\":\"currencies-line_currencies-line__3QM7_\",\"currency-button\":\"currencies-line_currency-button__3IF6p\",\"currency-position\":\"currencies-line_currency-position__2mqRB\",\"currency-name\":\"currencies-line_currency-name__2Sl-T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"operations-table_label__35qft\",\"label-buy\":\"operations-table_label-buy__3rD3D operations-table_label__35qft\",\"label-sell\":\"operations-table_label-sell__14ONW operations-table_label__35qft\"};"],"sourceRoot":""}